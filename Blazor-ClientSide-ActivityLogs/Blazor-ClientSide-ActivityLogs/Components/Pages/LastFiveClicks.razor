@page "/"

@using Blazor_ClientSide_ActivityLogs.Components.ClickLogging

@inject ClickLoggerService ClickLogger

@rendermode InteractiveServer

<div id="clickPopupContainer" style="position: fixed; top: 1rem; right: 1rem; z-index: 9999;">
</div>

<h3>Latest 5 from Service</h3>

<button class="btn btn-primary" @onclick="GetClickData">Show clicks</button>

<div class="clicks-container">
    @if (lastFiveClicks is not null && lastFiveClicks.Any())
    {
        <ul>
            @foreach (var click in lastFiveClicks)
            {
                <li>
                    <strong>Time:</strong> @click.Time <br />
                    <strong>Target:</strong> @click.Target <br />
                    <strong>Route:</strong> @click.Route <br />
                    <strong>Class:</strong> @click.Class <br />
                    <strong>Position:</strong> (@click.X, @click.Y)
                </li>
            }
        </ul>
    }
</div>

@* Example elements to test logging activity *@
<div class="sandbox-container">
    <input placeholder="Fill something here!" />
    <button>Click me!</button>
    
    <label for="pet-select">Choose a pet:</label>
    <select name="pets" id="pet-select">
      <option value="">--Please choose an option--</option>
      <option value="dog">Dog</option>
      <option value="cat">Cat</option>
      <option value="hamster">Hamster</option>
      <option value="parrot">Parrot</option>
      <option value="spider">Spider</option>
      <option value="goldfish">Goldfish</option>
    </select>
</div>

@code {
    [Inject] IJSRuntime JSRuntime { get; set; } = default!;

    private List<ClickEntry> lastFiveClicks = new();

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        
        await GetClickData();
    }

    private async Task GetClickData()
    {
        lastFiveClicks = await ClickLogger.GetLastFiveClicksAsync();
    }

    private async Task ReplayStoredClicks()
    {
        await JSRuntime.InvokeVoidAsync("replayClicks");
    }
}